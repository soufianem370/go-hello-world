#!/bin/sh
### BEGIN INIT INFO
# Provides: node_exporter
# Required-Start: $local_fs $network $named $time $syslog
# Required-Stop: $local_fs $network $named $time $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Description:
### END INIT INFO

PNAME="node_exporter"
SCRIPT="{{ node_exporter_bin_path }}"
RUNAS=root

PIDFILE="/var/run/$PNAME.pid"

start() {
if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE"); then
echo 'Service already running' >&2
return 1
fi
echo 'Starting serviceâ€¦' >&2
$SCRIPT > /dev/null 2>&1 &
pidof $PNAME > $PIDFILE
echo 'Service started' >&2
}

stop() {
if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
echo 'Service not running' >&2
return 1
fi
echo 'Stopping service' >&2
kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
echo 'Service stopped' >&2
}

uninstall() {
echo -n "Are you really sure you want to uninstall this service? That cannot be undone. [yes|No] "
local SURE
read SURE
if [ "$SURE" = "yes" ]; then
stop
rm -f "$PIDFILE"
update-rc.d -f  remove
rm -fv "$0"
fi
}

status() {
if [ -z "`ps -p $(cat "$PIDFILE") | grep $PNAME`" ]; then
	echo 'Service is not running.'
	exit 1
else
	echo 'Service is running.'
	exit 0
fi
}

case "$1" in
start)
start
;;
stop)
stop
;;
status)
status
;;
uninstall)
uninstall
;;
retart)
stop
start
;;
*)
echo "Usage: $0 {start|stop|restart|uninstall}"
esac
